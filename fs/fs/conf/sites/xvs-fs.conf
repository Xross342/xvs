map $host $config_dl_key {
  default "replace_with_dl_key";
}

log_format  xfstube	"$arg_f|$xcode|$xmode|$remote_addr|$bytes_sent";

limit_conn_zone $binary_remote_addr zone=addr:20m;
#limit_conn_zone $http_cf_connecting_ip zone=addr:20m;

upload_progress proxied 2m;

server {
	server_name  s1.xvs.tt;

	set $cgidir "/var/www/cgi-bin";
	set $htmldir "/var/www/htdocs";
	set $apache_backend http://127.0.0.1:8001;

	client_max_body_size 20000m;

	include mod_hls[.]conf;
	#include mod_streaming_http.conf;
	#include https.conf;

#####
	server_tokens               off;
	msie_padding                off;
	#max_ranges                  0;
	charset                     utf-8;

	gzip            on;
	gzip_min_length 512;
	gzip_comp_level 6;
	gzip_types text/css text/javascript application/javascript application/x-javascript;

	location ~* ^/(i\/|js\/|css\/|images\/|upload-data\/|player\/|emb\.html|favicon\.ico|404\.html|50x\.html|robots\.txt) {
		root		$htmldir;
		access_log	off;
		log_not_found   off;
		expires         +7d;
	}

	location / {
		proxy_pass       $apache_backend;

		proxy_set_header Host      $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_read_timeout 300;
		proxy_connect_timeout 300;
		proxy_send_timeout 300;
		client_max_body_size 100m;
		add_header		X-Content-Type-Options nosniff;
		add_header		X-XSS-Protection "1; mode=block";
		#limit_conn addr 5;
		#access_log /var/www/logs/access-nginx.log;
	}
#####

	location ~* /upload/(?<xdisk>\d\d) { include upload.conf; upload_store $cgidir/temp/$1; }

	location /upload_done {
		proxy_pass   $apache_backend/cgi-bin/upload.cgi;
		proxy_set_header Host      $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_read_timeout 300;
		proxy_connect_timeout 300;
		proxy_send_timeout 300;
	}

	location ^~ /progress {
		report_uploads proxied;
	}

	# Transfer special handler
	location /transfer/ {
		internal;
		alias $cgidir/;
		set $limit_rate $arg_speed;
	}

    location ~* "/v/(?<fpath>\d\d/\d{5}/\w{12}\_\w)" {
		alias $cgidir/uploads/$fpath;
		default_type  video/mp4;
		add_header Access-Control-Allow-Origin "*";
		add_header Content-disposition "attachment";
		mp4;
		access_log  logs/traffic_mp4.log  xfstube; # buffer=64k flush=1s;
		#limit_conn addr 3;

		if ( $uri ~* "/v/\d\d/\d{5}/(\w{12})\_([^/]+)" ) {
			set $xcode $1;
			set $xmode $2;
		}

		if ( $arg_d = '1' ) {
			add_header Content-disposition "attachment";
		}

		secure_link_hmac "$arg_t,$arg_s,$arg_e";
		secure_link_hmac_secret $config_dl_key;
		secure_link_hmac_message "$ippart|$arg_s|$arg_e|$xcode|$xmode|$arg_sp";
		secure_link_hmac_algorithm sha256;
		if ($secure_link_hmac != "1") { return 403; }
		set $limit_rate "${arg_sp}k";
	}

	location ~ /vtt/(.+\_\w\w\w)(\.vtt|\.srt|$) {
		alias $cgidir/uploads/$1;
		default_type	text/vtt;
		charset utf-8;
		source_charset utf-8;
		charset_types text/vtt;
		add_header Access-Control-Allow-Origin "*";
	}

	location /nstatus {
		stub_status on;
		#allow 127.0.0.1;
		#deny all;
	}

	if ($request_method !~ ^(GET|HEAD|POST)$ ) {
		return 444;
	}

	error_page  404              /404.html;
	error_page  500 502 503 504  /50x.html;

}

map $http_user_agent $is_mobile {
    default 0;
    ~*android|iphone|ipod|ipad 1;
}

geoip2 /usr/local/nginx/conf/GeoLite2-ASN.mmdb {
	auto_reload 5m;        
	$geoip2_data_asn source=$remote_addr autonomous_system_number;
}

# Get the first part of IP only
map $remote_addr $ippart1 {
  "~(?<i1>\d+)\.(?<i2>\d+)\.(?<i3>\d+)\.(?<i4>\d+)" "${i1}.${i2}";
  "~(?<i1>\w+)\:(?<i2>\w+)\:(?<i3>\w+)\:(?<i4>\w+)\:" "${i1}:${i2}:${i3}:${i4}";
  default "0.0";
}

map "$arg_i,$is_mobile,$remote_addr" $ippart {
	"~^0.0,"		"0.0";	# disabled
	"~^0.1,1"		"0.1";	# disabled for mobiles
	"~^0.2,1,\w+\:"	"0.2";	# disabled for ipv6
	"~^0.3,"		"$http_accept_language|$http_user_agent";	# use browser language+agent
	"~^0.4,"		"$geoip2_data_asn";	# ASN
	default $ippart1;
}


server {
    if ($host = s1.xvs.tt) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen       80 reuseport;
	server_name  s1.xvs.tt;
    return 404; # managed by Certbot


}